import { NextFunction, Request, Response } from "express";
import jwt from 'jsonwebtoken';
import db from './db';

const secret = 'undefined reference to function';

type AuthData = {
    username: string,
    is_teacher: boolean,
}

export interface AuthenticatedRequest extends Request {
    auth: AuthData
}

export const authenticateJWT = (req: Request, res: Response, next: NextFunction) => {
    const authHeader = req.headers.authorization;

    if (authHeader) {
        const token = authHeader.split(' ')[1];

        jwt.verify(token, secret, (err, payload) => {
            if (err) {
                res.sendStatus(403);
            } else {
                (req as AuthenticatedRequest).auth = (payload as AuthData);
                next();
            }
        });
    } else {
        res.sendStatus(401);
    }
};

export const authenticatedTeacher = async (req: Request, res: Response, next: NextFunction) => {
    const authHeader = req.headers.authorization;

    if (authHeader) {
        const token = authHeader.split(' ')[1];

        try {
            const payload = jwt.verify(token, secret);
            const { is_teacher } = payload as AuthData;
            if (is_teacher) {
                (req as AuthenticatedRequest).auth = (payload as AuthData);
                next()
            } else {
                res.sendStatus(403);
            }
        } catch (e) {
            res.sendStatus(403);
        }
    } else {
        res.sendStatus(401);
    }
}


type JwtData = {
    token: string,
    expiresIn: number,
    is_teacher: boolean,
}

export const createToken = async (username: string): Promise<JwtData> => {
    const expiresIn = 60 * 60 * 1000;
    const is_teacher = await user_is_teacher(username);
    return {
        expiresIn,
        is_teacher,
        token: jwt.sign(
            { username, is_teacher },
            secret,
            { expiresIn }
        )
    }
}

const user_is_teacher = async (username: string): Promise<boolean> => {
    const { count } = await db.get(
        'SELECT COUNT(*) as count FROM teachers where username = ?',
        [username]
    );
    return count > 1;
}
