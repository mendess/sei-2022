import { FormEvent, useEffect, useState } from 'react';
import { Session, } from '../App';
import config from '../config';
import axios from 'axios';
import './student.css';

export type StudentParams = {
    user: Session,
    logout: () => void,
}

export type Tests = {
    [key: string]: {
        [key: string]: string
    }
}

const Course = ({ name, jwt, logout }: { name: string, jwt: string, logout: () => void }) => {
    const [tests, setTests] = useState<Tests>({});
    const [inputs, setInputs] = useState<Tests>({});
    useEffect(() => {
        axios.get(`${config.baseUrl}/cadeira/${name}/tests`, {
            headers: { Authorization: `Bearer ${jwt}` }
        }).then(t => setTests(t.data))
            .catch(_ => logout());
    }, [name, jwt, logout])
    useEffect(() => setInputs({}), [name]);
    return (
        <div className="">
            {Object.keys(tests).length > 0 ? <></> : <p className="warning">Não há testes</p>}
            {Object.keys(tests).flatMap((t, ti) => (
                <div key={ti} className="">
                    <h3>{t}° teste</h3>
                    <form onSubmit={e => {
                        e.preventDefault();
                        setInputs({ ...inputs, [ti]: { entregue: true } });
                    }}>
                        {
                            Object.keys(tests[t]).map((question, qi) => (
                                <div key={`${ti}-${qi}`}>
                                    <p>{tests[t][question]}</p>
                                    <input
                                        className=""
                                        type='text'
                                        placeholder='Resposta'
                                        onChange={e => setInputs({
                                            ...inputs,
                                            [ti]: {
                                                ...(inputs[ti] || {}),
                                                [qi]: e.target.value,
                                                entregue: false,
                                            }
                                        })}
                                        value={(inputs[ti] || {})[qi] || ""}
                                    />
                                </div>
                            ))
                        }
                        {inputs[ti]?.entregue ? <div className="entregue">Entregue</div> : <></>}
                        <input type='submit' className="test-button" value='Entregar' />
                    </form>
                </div>
            )
            )}
        </div>
    )
}

export const Student = ({ user, logout }: StudentParams) => {
    const [searchText, setSearchText] = useState<string>('');
    const [results, setResults] = useState<string[]>([]);
    const [selectedCourse, setSelectedCourse] = useState<string | undefined>(undefined);

    const search = async (e: FormEvent<Element>) => {
        e.preventDefault()
        if (searchText.length === 0) return;
        try {
            const res = await axios.get(`${config.baseUrl}/cadeira`, {
                params: { search: searchText },
                headers: { Authorization: `Bearer ${user.jwt}` }
            });
            setResults(res.data.map((x: any) => x.course))
        } catch (e) {
            logout();
        }
    };

    console.log(results)

    return (
        <div>
            {/*<div>Bem vindo/a {user.student_number}</div>*/}
            <div className="globalPanel">
                <div className="topTabs bgBanner"></div>
            </div>
            <div className="contentBox">
                <div className="container">
                    <div className="row-column">
                        <div className="column-one">
                            <div className="section">
                                <div className="title"><span>Procura</span></div>
                                <div className='content'>
                                    <div className="search">
                                        <form onSubmit={search}>
                                            <input
                                                className=""
                                                type='text'
                                                placeholder='Procurar unidade'
                                                onChange={(e) => setSearchText(e.target.value)}
                                                value={searchText}
                                            />
                                            <input className="search-button" type='submit' value='Ir' />
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div className="column-two">
                            <div className="section">
                                <div className="title"><span>Lista de Unidades</span></div>
                                <div className='content'>
                                    {results.length !== 0 ?
                                    <ul className="list-results">
                                        {results.map((x, i) => <li className="result" key={i} onClick={() => setSelectedCourse(x)}>{x}</li>)}
                                    </ul>
                                    : <p className="warning">Selecionar unidade curricular</p>}
                                </div>
                            </div>
                        </div>
                        <div className="column-three">
                        <div className="section">
                                <div className="title"><span>Testes</span></div>
                                <div className='content'>
                            {selectedCourse !== undefined
                                    ? <Course name={selectedCourse} jwt={user.jwt} logout={logout} />
                                    : <p className="warning">Selecionar unidade curricular</p>
                            }
                            </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}


